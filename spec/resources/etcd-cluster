#!/bin/bash

cd $(dirname $0)/../..

node_count=3
data_path=tmp/etcd
hostname='127.0.0.1'
client_port_base=4000
server_port_base=7000

function usage () {
  echo "Usage: $(basename $0) start|stop|status|reset|leader|machines" 1>&2
  echo "       start requires ETCD_HOME to be set" 1>&2
  exit 1
}

function find_etcd () {
  if [[ -n "$ETCD_HOME" ]]; then
    for bin_path in $ETCD_HOME/bin/etcd $ETCD_HOME/etcd; do
      if [[ -e $bin_path ]]; then
        echo $bin_path
        return 0
      fi
    done
  fi
  return -1
}

function start () {
  bin_path=$(find_etcd)

  if [[ -n "$bin_path" ]]; then
    mkdir -p $data_path

    for (( i = 1; i <= $node_count; i++ )); do
      if (( i > 1 )); then
        master_option="-C=127.0.0.1:$((server_port_base + 1))"
      fi
      $bin_path -vv \
        -n=node$i \
        -d=$data_path/node$i \
        -s=$hostname:$((server_port_base + i)) \
        -c=$hostname:$((client_port_base + i)) \
        $master_option >> $data_path/node$i.out & 2>&1
      echo $! > $data_path/node$i.pid
      sleep 0.05
    done
  else
    echo "Cannot find etcd, please set ETCD_HOME" 1>&2
    exit 1
  fi
}

function stop () {
  for pid_file in $data_path/node*.pid; do
    if [[ -e $pid_file ]]; then
      kill $(cat $pid_file)
      rm $pid_file
    fi
  done
}

function status () {
  nodes_up=0
  for (( i = 1; i <= $node_count; i++ )); do
    pid_file="tmp/etcd/node$i.pid"
    if [[ -e $pid_file && $(pgrep -F $pid_file) ]]; then
      nodes_up=$((nodes_up + 1))
    fi
  done
  if (( nodes_up == 0 )); then
    echo "DOWN" 1>&2
    exit 1
  elif (( nodes_up < $node_count )); then
    nodes_down=$((node_count - nodes_up))
    echo "WARN $nodes_down of $node_count nodes down" 1>&2
    exit 1
  else
    echo "OK"
  fi
}

function reset () {
  rm -rf $data_path/node*
}

function leader () {
  curl -s -L "http://127.0.0.1:$((client_port_base + 1))/v1/leader"
  echo
}

function machines () {
  curl -s -L "http://127.0.0.1:$((client_port_base + 1))/v1/machines" | perl -pe 's/,\s*/\n/g'
  echo
}

case $1 in
  "start") start ;;
  "stop") stop ;;
  "status") status ;;
  "reset") reset ;;
  "leader") leader ;;
  "machines") machines ;;
  *) usage ;;
esac